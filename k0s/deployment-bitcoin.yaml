apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bitcoin-data-longhorn
  namespace: chainfetch
  annotations:
    volume.longhorn.io/number-of-replicas: "1"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 800Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitcoin-node
  namespace: chainfetch
  labels:
    app: bitcoin-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bitcoin-node
  template:
    metadata:
      labels:
        app: bitcoin-node
    spec:
      containers:
        - name: bitcoin
          image: bitcoin/bitcoin:latest
          imagePullPolicy: Always
          command: ["bitcoind"]
          args:
            - "-printtoconsole"
            - "-server"
            - "-rpcbind=0.0.0.0:8332"
            - "-rpcallowip=0.0.0.0/0"
            - "-rpcuser=bitcoin"
            - "-rpcpassword=bitcoinrpc2024"
            - "-txindex"
            - "-dbcache=4096"
            - "-maxmempool=2048"
            - "-datadir=/bitcoin/.bitcoin"
            - "-rest"
            - "-daemon=0"
          ports:
            - containerPort: 8332
              name: rpc
            - containerPort: 8333
              name: p2p
          volumeMounts:
            - name: bitcoin-data
              mountPath: /bitcoin/.bitcoin
          resources:
            requests:
              cpu: "1000m"
              memory: "12Gi"
              ephemeral-storage: "2Gi"
            limits:
              cpu: "2000m"
              memory: "32Gi"
              ephemeral-storage: "4Gi"
          securityContext:
            capabilities:
              drop:
                - NET_RAW
          readinessProbe:
            tcpSocket:
              port: 8332
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8332
            initialDelaySeconds: 180
            periodSeconds: 60
            timeoutSeconds: 5
      volumes:
        - name: bitcoin-data
          persistentVolumeClaim:
            claimName: bitcoin-data-longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: bitcoin-node
  namespace: chainfetch
  labels:
    app: bitcoin-node
spec:
  type: ClusterIP
  ports:
    - port: 8332
      targetPort: 8332
      name: rpc
  selector:
    app: bitcoin-node
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bitcoin-ingress
  namespace: chainfetch
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-url: "http://bearer-auth.chainfetch.svc.cluster.local/auth"
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - bitcoin.chainfetch.app
      secretName: bitcoin-tls
  rules:
    - host: bitcoin.chainfetch.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bitcoin-node
                port:
                  number: 8332 
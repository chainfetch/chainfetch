# Qdrant Vector Database - Unified Cluster using both disks
# Two-node cluster with automatic disk distribution:
# - Node 0: Automatically assigned to available disk
# - Node 1: Automatically assigned to available disk  
# - Total: ~750Gi unified cluster across both disks
#
# Deployment: kubectl apply -f qdrant-complete.yaml
# Access: http://qdrant-headless.qdrant.svc.cluster.local:6333
#
apiVersion: v1
kind: Namespace
metadata:
  name: qdrant
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: longhorn-qdrant-distributed
provisioner: driver.longhorn.io
allowVolumeExpansion: true
reclaimPolicy: Retain
parameters:
  numberOfReplicas: "1"
  dataLocality: "best-effort"
---
apiVersion: v1
kind: Service
metadata:
  name: qdrant-headless
  namespace: qdrant
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 6333
      name: http
    - port: 6334
      name: grpc
    - port: 6335
      name: p2p
  selector:
    app: qdrant
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qdrant
  namespace: qdrant
  labels:
    app: qdrant
spec:
  serviceName: qdrant-headless
  replicas: 2
  selector:
    matchLabels:
      app: qdrant
  template:
    metadata:
      labels:
        app: qdrant
    spec:
      initContainers:
      - name: cluster-init
        image: busybox:1.35
        command: ['/bin/sh']
        args:
          - -c
          - |
            if [ "${HOSTNAME}" = "qdrant-0" ]; then
              echo "I am the first node, starting cluster"
              echo "QDRANT__CLUSTER__ENABLED=true" > /config/cluster.env
              echo "QDRANT__CLUSTER__P2P__PORT=6335" >> /config/cluster.env
            else
              echo "I am joining the cluster"
              echo "QDRANT__CLUSTER__ENABLED=true" > /config/cluster.env
              echo "QDRANT__CLUSTER__P2P__PORT=6335" >> /config/cluster.env
              echo "QDRANT__CLUSTER__BOOTSTRAP_PEERS=qdrant-0.qdrant-headless.qdrant.svc.cluster.local:6335" >> /config/cluster.env
            fi
        volumeMounts:
        - name: cluster-config
          mountPath: /config
      containers:
      - name: qdrant
        image: qdrant/qdrant:latest
        ports:
        - containerPort: 6333
        - containerPort: 6334
        - containerPort: 6335
        command: ['/bin/sh']
        args:
          - -c
          - |
            set -a
            source /config/cluster.env
            set +a
            ./qdrant
        volumeMounts:
        - name: qdrant-storage
          mountPath: /qdrant/storage
        - name: cluster-config
          mountPath: /config
        readinessProbe:
          httpGet:
            path: /
            port: 6333
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 6333
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
      volumes:
      - name: cluster-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: qdrant-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "longhorn-qdrant-distributed"
      resources:
        requests:
          storage: 350Gi 
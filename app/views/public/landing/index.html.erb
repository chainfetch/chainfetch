<%= content_for :title, "ChainFetch - AI-Powered Ethereum Blockchain Intelligence API" %>
<%= content_for :description, "ChainFetch API: AI-powered real-time Ethereum blockchain intelligence with advanced semantic search capabilities. Real-time WebSocket streams, vector embeddings, LLM-powered query processing, and comprehensive blockchain data analytics. Start with instant access." %>
<%= content_for :keywords, "ethereum API, blockchain intelligence API, semantic search API, ethereum data API, real-time blockchain API, ethereum address API, ethereum transaction API, blockchain analytics API, ethereum block API, AI blockchain API, vector search API, LLM blockchain API, smart contract API, ethereum explorer API, blockchain streaming API, web3 intelligence API, ethereum semantic search, blockchain vector database" %>

<div class="min-h-screen bg-[#0F172A]">
  <main>
    <!-- Hero Section -->
    <section class="py-16 sm:py-24 bg-[#0F172A] text-white relative overflow-hidden">
      <div class="container mx-auto px-4 relative">
        <div class="flex flex-col md:flex-row items-center">
          <div class="md:w-1/2 mb-10 md:mb-0">
            <div class="inline-block mb-6 px-4 py-2 bg-blue-500/10 rounded-full border border-blue-500/20">
              <span class="text-blue-400 font-semibold">AI-Powered Blockchain Intelligence</span>
            </div>
            <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 leading-tight animate-fadeIn bg-clip-text text-transparent bg-gradient-to-r from-white via-blue-100 to-white">
              Real-Time AI-Powered Ethereum Intelligence API
            </h1>
            <p class="text-xl md:text-2xl mb-6 text-gray-300 max-w-xl">
              Access real-time Ethereum blockchain data with advanced semantic search, vector embeddings, and LLM-powered query processing. Built for developers who need intelligent blockchain insights.
            </p>
            <div class="mb-8 p-4 bg-gradient-to-r from-green-500/10 to-emerald-500/10 border border-green-500/20 rounded-lg max-w-xl">
              <div class="flex items-center text-green-400 mb-2">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                  <path d="M20 6L9 17l-5-5"></path>
                </svg>
                <span class="font-semibold">50 Free Credits Included</span>
              </div>
              <p class="text-sm text-gray-300">Start exploring immediately with 50 complimentary API calls. No credit card required to get started.</p>
            </div>
            <div class="flex flex-col sm:flex-row gap-4">
              <%= link_to "/app", class: "text-center group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-md font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                <span class="relative z-10">Get API Key + 50 Free Credits</span>
                <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
              <% end %>
              <%= link_to "View Documentation", "https://docs.chainfetch.app", class: "text-center px-6 py-3 bg-transparent border-2 border-blue-500/30 rounded-md font-semibold transition-all duration-200 hover:border-blue-500/60 hover:bg-blue-500/10" %>
            </div>
          </div>
          
          <div class="md:w-1/2 relative">
            <div class="relative z-10 bg-[#1E293B]/80 backdrop-blur-sm rounded-lg p-6 text-white border border-blue-500/20 transform transition-transform hover:scale-105 duration-500 max-w-md mx-auto shadow-[0_0_30px_rgba(59,130,246,0.1)] px-8">
              <div class="flex items-center justify-between mb-4">
                <div class="flex items-center text-blue-400">
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                    <path d="m18 16 4-4-4-4"></path>
                    <path d="m6 8-4 4 4 4"></path>
                    <path d="m14.5 4-5 16"></path>
                  </svg>
                  <span class="font-mono text-sm">Semantic Search Example</span>
                </div>
                <div class="flex space-x-2">
                  <div class="w-3 h-3 rounded-full bg-red-500"></div>
                  <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
                  <div class="w-3 h-3 rounded-full bg-green-500"></div>
                </div>
              </div>
              <pre class="bg-[#0F172A] p-5 rounded-md text-sm font-mono overflow-x-auto border border-gray-800 shadow-inner"><code><div class="-mt-5">
<span class="text-blue-400">const</span><span class="text-gray-300"> response = </span><span class="text-yellow-400">await</span><span class="text-blue-400"> fetch</span><span class="text-purple-400">(</span>
  <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/semantic_search?'</span><span class="text-gray-300"> + </span>
  <span class="text-blue-400">new</span><span class="text-yellow-400"> URLSearchParams</span><span class="text-purple-400">({</span>
    <span class="text-orange-400">query</span><span class="text-gray-300">: </span><span class="text-green-400">'whale addresses with DeFi activity'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">limit</span><span class="text-gray-300">: </span><span class="text-green-400">'10'</span>
  <span class="text-purple-400">})</span><span class="text-gray-300">, {</span>
    <span class="text-orange-400">method</span><span class="text-gray-300">: </span><span class="text-green-400">'GET'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">'accept'</span><span class="text-gray-300">: </span><span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">'authorization'</span><span class="text-gray-300">: </span><span class="text-green-400">'Bearer TOKEN'</span>
    <span class="text-gray-300">}</span>
<span class="text-gray-300">});</span>

<span class="text-blue-400">const</span><span class="text-gray-300"> data = </span><span class="text-yellow-400">await</span><span class="text-gray-300"> response.</span><span class="text-blue-400">json</span><span class="text-purple-400">()</span><span class="text-gray-300">;</span>
<span class="text-gray-300">console.</span><span class="text-blue-400">log</span><span class="text-purple-400">(</span><span class="text-gray-300">data.result.points</span><span class="text-purple-400">)</span><span class="text-gray-300">;</span>
</div></code></pre>
              <div class="mt-4 flex items-center justify-between text-sm border-t border-gray-700/50 pt-4">
                <div class="flex items-center space-x-3">
                  <span class="flex items-center px-2 py-1 rounded-md bg-green-500/10 border border-green-500/20">
                    <span class="w-2 h-2 rounded-full bg-green-500 mr-2"></span>
                    <span class="text-green-400">Connected</span>
                  </span>
                  <span class="text-gray-400">200 OK</span>
                </div>
                <div class="flex items-center text-blue-500">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1">
                    <circle cx="12" cy="12" r="3"></circle>
                    <path d="M12 1v6m0 6v6m11-7h-6m-6 0H1"></path>
                  </svg>
                  <span>AI Search Results</span>
                </div>
              </div>
            </div>
          </div>
        </div>
    </section>

    <!-- Live Analysis Sample Section -->
    <section class="py-16 bg-[#1E293B] border-b border-gray-800">
      <div class="container mx-auto px-4">
        <div class="max-w-6xl mx-auto">
          <div class="text-center mb-12">
            <div class="inline-block mb-6 px-4 py-2 bg-green-500/10 rounded-full border border-green-500/20">
              <span class="text-green-400 font-semibold">🔴 Live Analysis</span>
            </div>
            <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-white leading-tight">
              Real-Time AI Block Analysis
            </h2>
            <p class="text-lg sm:text-xl text-gray-300 max-w-3xl mx-auto">
              See how our AI analyzes each Ethereum block in real-time, providing deep insights into network activity, transaction patterns, and economic movements.
            </p>
          </div>

          <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl border border-green-500/20 overflow-hidden shadow-[0_0_30px_rgba(34,197,94,0.1)]">
            <!-- Header -->
            <div class="bg-gradient-to-r from-green-500/10 to-emerald-500/10 border-b border-green-500/20 p-6">
              <div class="flex items-center justify-between">
                <div class="flex items-center">
                  <div class="w-3 h-3 rounded-full bg-green-500 mr-3 animate-pulse"></div>
                  <h3 class="text-xl font-bold text-white">Latest Block Analysis</h3>
                </div>
                <div class="flex items-center text-sm text-gray-400">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                    <circle cx="12" cy="12" r="3"></circle>
                    <path d="M12 1v6m0 6v6m11-7h-6m-6 0H1"></path>
                  </svg>
                  <span>AI-Generated Summary</span>
                </div>
              </div>
            </div>

            <!-- Block Summary Content -->
            <div class="p-8">
              <div class="bg-[#1E293B]/60 rounded-lg p-6 border border-gray-700/50">
                <div class="mb-4">
                  <div class="flex items-center justify-between mb-3">
                    <span class="text-green-400 font-mono text-sm">Block Analysis</span>
                    <span class="text-gray-400 text-sm">Generated <%= time_ago_in_words(@latest_block.created_at) %> ago</span>
                  </div>
                  <div class="h-px bg-gradient-to-r from-green-500/20 via-green-500/40 to-green-500/20 mb-6"></div>
                </div>
                
                <div class="text-gray-300 leading-relaxed text-base">
                  <% if @latest_block&.summary.present? %>
                    <%= @latest_block.summary %>
                  <% else %>
                    <span class="text-gray-400 italic">
                      No recent block analysis available. Our AI is currently processing the latest Ethereum blocks to provide real-time insights.
                    </span>
                  <% end %>
                </div>
              </div>

              <!-- Stats Grid -->
              <% if @latest_block&.data.present? %>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-6">
                  <div class="bg-[#1E293B]/40 rounded-lg p-4 border border-gray-700/30">
                    <div class="text-2xl font-bold text-green-400"><%= @latest_block.data.dig('info', 'transactions_count') || 'N/A' %></div>
                    <div class="text-sm text-gray-400">Transactions</div>
                  </div>
                  <div class="bg-[#1E293B]/40 rounded-lg p-4 border border-gray-700/30">
                    <div class="text-2xl font-bold text-blue-400">
                      <% gas_used_percentage = @latest_block.data.dig('info', 'gas_used_percentage') %>
                      <% if gas_used_percentage %>
                        <%= number_with_precision(gas_used_percentage, precision: 1) %>%
                      <% else %>
                        N/A
                      <% end %>
                    </div>
                    <div class="text-sm text-gray-400">Gas Used</div>
                  </div>
                  <div class="bg-[#1E293B]/40 rounded-lg p-4 border border-gray-700/30">
                    <div class="text-2xl font-bold text-yellow-400">
                      <% 
                        # Calculate total ETH transferred from transactions
                        transactions = @latest_block.data.dig('transactions', 'items') || []
                        total_eth = 0
                        transactions.each do |tx|
                          if tx['value'] && tx['value'].to_f > 0
                            total_eth += (tx['value'].to_f / 1e18)
                          end
                        end
                        total_eth = total_eth.round(0)
                      %>
                      <%= total_eth > 0 ? number_with_delimiter(total_eth) : 'N/A' %>
                    </div>
                    <div class="text-sm text-gray-400">ETH Transferred</div>
                  </div>
                  <div class="bg-[#1E293B]/40 rounded-lg p-4 border border-gray-700/30">
                    <div class="text-2xl font-bold text-purple-400">
                      <% 
                        # Calculate unique addresses from transactions
                        transactions = @latest_block.data.dig('transactions', 'items') || []
                        unique_addresses = Set.new
                        transactions.each do |tx|
                          unique_addresses.add(tx.dig('from', 'hash')) if tx.dig('from', 'hash')
                          unique_addresses.add(tx.dig('to', 'hash')) if tx.dig('to', 'hash')
                        end
                      %>
                      <%= unique_addresses.size > 0 ? unique_addresses.size : 'N/A' %>
                    </div>
                    <div class="text-sm text-gray-400">Unique Addresses</div>
                  </div>
                </div>
              <% end %>

              <!-- CTA -->
              <div class="mt-8 text-center">
                <div class="mb-4">
                  <span class="text-sm text-gray-400">This analysis was generated in real-time using our AI pipeline</span>
                </div>
                <%= link_to "/app", class: "group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                  <span class="relative z-10">Access Live Block Stream</span>
                  <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <div class="border-b bg-[#1E293B] border-gray-500/50"></div>

    <!-- Real-Time Alert System Section -->
    <section class="py-16 bg-[#1E293B] border-b border-gray-800">
      <div class="container mx-auto px-4">
        <div class="max-w-6xl mx-auto">
          <div class="text-center mb-12">
            <div class="inline-block mb-6 px-4 py-2 bg-yellow-500/10 rounded-full border border-yellow-500/20">
              <span class="text-yellow-400 font-semibold">🔔 Real-Time Alerts</span>
            </div>
            <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-white leading-tight">
              Never Miss Important Blockchain Activity
            </h2>
            <p class="text-lg sm:text-xl text-gray-300 max-w-3xl mx-auto">
              Set up intelligent webhook alerts for Ethereum addresses and get instant notifications when transactions occur. Monitor wallets, contracts, and DeFi protocols with real-time precision.
            </p>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center">
            <!-- Alert Configuration Demo -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl border border-yellow-500/20 overflow-hidden shadow-[0_0_30px_rgba(234,179,8,0.1)]">
              <!-- Header -->
              <div class="bg-gradient-to-r from-yellow-500/10 to-red-500/10 border-b border-yellow-500/20 p-6">
                <div class="flex items-center justify-between">
                  <div class="flex items-center text-yellow-500">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-3">
                      <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"/>
                      <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"/>
                    </svg>
                    <span class="font-semibold">Alert Configuration</span>
                  </div>
                  <span class="px-3 py-1 rounded-full text-xs font-medium bg-green-500/20 text-green-400 border border-green-500/30">
                    Active
                  </span>
                </div>
              </div>

              <!-- Alert Details -->
              <div class="p-8">
                <div class="space-y-6">
                  <div>
                    <label class="block text-sm font-medium text-gray-400 mb-2">Monitored Address</label>
                    <div class="bg-[#0F172A] rounded-md p-3 border border-gray-800">
                      <p class="text-sm font-mono text-yellow-300 break-all">
                        0x742d35Cc6C4C45323324...
                      </p>
                    </div>
                  </div>
                  
                  <div>
                    <label class="block text-sm font-medium text-gray-400 mb-2">Webhook Endpoint</label>
                    <div class="bg-[#0F172A] rounded-md p-3 border border-gray-800">
                      <p class="text-sm text-gray-200 break-all">
                        https://your-app.com/webhooks/ethereum
                      </p>
                    </div>
                  </div>

                  <div class="grid grid-cols-2 gap-4">
                    <div class="bg-[#1E293B]/60 rounded-lg p-4 border border-gray-700/50">
                      <div class="text-2xl font-bold text-green-400">847</div>
                      <div class="text-sm text-gray-400">Alerts Sent</div>
                    </div>
                    <div class="bg-[#1E293B]/60 rounded-lg p-4 border border-gray-700/50">
                      <div class="text-2xl font-bold text-blue-400">99.9%</div>
                      <div class="text-sm text-gray-400">Uptime</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Features List -->
            <div class="space-y-8">
              <div>
                <h3 class="text-2xl font-bold text-white mb-6">Intelligent Alert System</h3>
                <div class="space-y-6">
                  <!-- Real-time Monitoring -->
                  <div class="flex items-start">
                    <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-yellow-500/20 to-red-500/20 rounded-lg flex items-center justify-center mr-4">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-yellow-400">
                        <circle cx="12" cy="12" r="10"/>
                        <path d="M12 6v6l4 2"/>
                      </svg>
                    </div>
                    <div>
                      <h4 class="text-lg font-semibold text-white mb-2">Real-Time Transaction Monitoring</h4>
                      <p class="text-gray-400">Get instant webhook notifications within seconds of transaction confirmation. Monitor any Ethereum address for incoming and outgoing transactions.</p>
                    </div>
                  </div>

                  <!-- Reliable Delivery -->
                  <div class="flex items-start">
                    <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-green-500/20 to-emerald-500/20 rounded-lg flex items-center justify-center mr-4">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400">
                        <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10"/>
                      </svg>
                    </div>
                    <div>
                      <h4 class="text-lg font-semibold text-white mb-2">Guaranteed Delivery</h4>
                      <p class="text-gray-400">Enterprise-grade webhook delivery with automatic retries, exponential backoff, and comprehensive delivery tracking for 99.9% reliability.</p>
                    </div>
                  </div>
                </div>
              </div>

              <!-- CTA -->
              <div class="bg-gradient-to-r from-yellow-500/10 to-red-500/10 rounded-xl p-6 border border-yellow-500/20">
                <h4 class="text-lg font-semibold text-white mb-3">Ready to Start Monitoring?</h4>
                <p class="text-gray-300 mb-4 text-sm">Set up your first alert in under 2 minutes. Monitor any Ethereum address and get real-time webhook notifications.</p>
                <%= link_to "/app", class: "group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block w-full text-center" do %>
                  <span class="relative z-10">Create Your First Alert</span>
                  <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
                <% end %>
              </div>
            </div>
          </div>

          <!-- Sample Webhook Payload -->
          <div class="mt-16">
            <div class="text-center mb-8">
              <h3 class="text-2xl font-bold text-white mb-4">Webhook Payload Example</h3>
              <p class="text-gray-400">See what data you'll receive when an alert is triggered</p>
            </div>
            
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl border border-yellow-500/20 overflow-hidden max-w-4xl mx-auto">
              <div class="bg-gradient-to-r from-yellow-500/10 to-red-500/10 border-b border-yellow-500/20 p-4">
                <div class="flex items-center justify-between">
                  <div class="flex items-center text-yellow-400">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                      <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/>
                      <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/>
                    </svg>
                    <span class="font-mono text-sm">POST /your-webhook-endpoint</span>
                  </div>
                  <span class="text-xs text-gray-400">JSON Payload</span>
                </div>
              </div>
              
              <pre class="p-6 overflow-x-auto text-sm">
<code><span class="text-yellow-400">{</span>
  <span class="text-orange-400">"address_hash"</span><span class="text-gray-300">: </span><span class="text-green-400">"0xdadB0d80178819F2319190D340ce9A924f783711"</span><span class="text-gray-300">,</span>
  <span class="text-orange-400">"transaction_data"</span><span class="text-gray-300">: {</span>
    <span class="text-orange-400">"info"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">"hash"</span><span class="text-gray-300">: </span><span class="text-green-400">"0x84b4b3250ee1358905f8811bf2eb973c780a0b00ca686d75eaddc3dca3e2d887"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"block_number"</span><span class="text-gray-300">: </span><span class="text-blue-400">17386968</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"timestamp"</span><span class="text-gray-300">: </span><span class="text-green-400">"2023-06-01T15:51:59.000000Z"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"value"</span><span class="text-gray-300">: </span><span class="text-green-400">"2302322924045933"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"gas_price"</span><span class="text-gray-300">: </span><span class="text-green-400">"40053362244"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"status"</span><span class="text-gray-300">: </span><span class="text-green-400">"ok"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"from"</span><span class="text-gray-300">: {</span>
        <span class="text-orange-400">"hash"</span><span class="text-gray-300">: </span><span class="text-green-400">"0xdadB0d80178819F2319190D340ce9A924f783711"</span><span class="text-gray-300">,</span>
        <span class="text-orange-400">"ens_domain_name"</span><span class="text-gray-300">: </span><span class="text-green-400">"buildernet.eth"</span>
      <span class="text-gray-300">},</span>
      <span class="text-orange-400">"to"</span><span class="text-gray-300">: {</span>
        <span class="text-orange-400">"hash"</span><span class="text-gray-300">: </span><span class="text-green-400">"0x000000000022D473030F116dDEE9F6B43aC78BA3"</span><span class="text-gray-300">,</span>
        <span class="text-orange-400">"name"</span><span class="text-gray-300">: </span><span class="text-green-400">"Permit2"</span>
      <span class="text-gray-300">},</span>
      <span class="text-orange-400">"method"</span><span class="text-gray-300">: </span><span class="text-green-400">"transferFrom"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">"transaction_tag"</span><span class="text-gray-300">: </span><span class="text-green-400">"DeFi Interaction"</span>
    <span class="text-gray-300">}</span>
  <span class="text-gray-300">},</span>
  <span class="text-orange-400">"summary"</span><span class="text-gray-300">: </span><span class="text-green-400">"Transfer 0.002 ETH to Permit2 contract for DeFi interaction. Transaction executed successfully with BuilderNet ENS domain from address."</span>
<span class="text-yellow-400">}</span></code>
              </pre>
            </div>
          </div>
        </div>
      </div>
    </section>

    <div class="border-b bg-[#1E293B] border-gray-500/50"></div>

    <!-- Core Features Section -->
    <section class="py-12 sm:py-16 lg:py-20 bg-[#1E293B]" id="core-features">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">
          <div class="text-center mb-12 lg:mb-16">
            <div class="inline-block mb-4 lg:mb-6 px-3 py-1.5 lg:px-4 lg:py-2 bg-blue-500/10 rounded-full border border-blue-500/20">
              <span class="text-blue-400 font-semibold text-sm lg:text-base">🚀 Core Features</span>
            </div>
            <h2 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 lg:mb-6 text-white leading-tight">
              AI-Powered Blockchain Intelligence
            </h2>
            <p class="text-lg sm:text-xl text-gray-300 max-w-3xl mx-auto px-4">
              ChainFetch combines real-time blockchain streaming with advanced AI to deliver intelligent insights into Ethereum's transaction ecosystem. Experience the future of blockchain data analysis.
            </p>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8">
            <!-- Real-Time Streaming -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-4 lg:mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500 lg:w-6 lg:h-6">
                  <path d="M3 3l18 18"></path>
                  <path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path>
                  <path d="M3 5c0 1.66 4 3 9 3s9-1.34 9-3"></path>
                  <path d="M3 12v7c0 1.66 4 3 9 3s9-1.34 9-3v-7"></path>
                </svg>
              </div>
              <h3 class="text-lg lg:text-xl font-semibold mb-3 text-white">Real-Time Block Streaming</h3>
              <p class="text-gray-400 text-sm lg:text-base">WebSocket subscription to Ethereum's public nodes captures new blocks every ~12 seconds, instantly processing each block for comprehensive analysis.</p>
            </div>

            <!-- Semantic Search -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-4 lg:mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500 lg:w-6 lg:h-6">
                  <circle cx="11" cy="11" r="8"></circle>
                  <path d="m21 21-4.35-4.35"></path>
                </svg>
              </div>
              <h3 class="text-lg lg:text-xl font-semibold mb-3 text-white">AI-Powered Semantic Search</h3>
              <p class="text-gray-400 text-sm lg:text-base">Leveraging Qwen3-Embedding-0.6B model to transform blockchain data into high-dimensional vector embeddings for intelligent semantic similarity search.</p>
            </div>

            <!-- LLM Query Processing -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-4 lg:mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500 lg:w-6 lg:h-6">
                  <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                </svg>
              </div>
              <h3 class="text-lg lg:text-xl font-semibold mb-3 text-white">LLM-Powered Query Processing</h3>
              <p class="text-gray-400 text-sm lg:text-base">LLaMA 3.2 3B model intelligently translates natural language queries into precise API parameters, supporting 150+ address parameters and 120+ block parameters.</p>
            </div>

            <!-- Vector Database -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-4 lg:mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500 lg:w-6 lg:h-6">
                  <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
                </svg>
              </div>
              <h3 class="text-lg lg:text-xl font-semibold mb-3 text-white">Qdrant Vector Database</h3>
              <p class="text-gray-400 text-sm lg:text-base">Ultra-fast vector similarity search across addresses, transactions, and blocks collections with sub-second semantic query responses.</p>
            </div>

            <!-- Multi-Modal Search -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-4 lg:mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500 lg:w-6 lg:h-6">
                  <path d="M9 11H1v3h8v3l3-3.5L9 11z"></path>
                  <path d="M22 12h-7"></path>
                </svg>
              </div>
              <h3 class="text-lg lg:text-xl font-semibold mb-3 text-white">Multi-Modal Search Options</h3>
              <p class="text-gray-400 text-sm lg:text-base">Choose from semantic search (vector similarity), LLM search (AI-assisted parameters), or JSON search (direct parameter filtering) based on your needs.</p>
            </div>

            <!-- Kubernetes Native -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-4 lg:mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500 lg:w-6 lg:h-6">
                  <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"></path>
                </svg>
              </div>
              <h3 class="text-lg lg:text-xl font-semibold mb-3 text-white">Production-Ready Infrastructure</h3>
              <p class="text-gray-400 text-sm lg:text-base">Kubernetes-native deployment with auto-scaling, rate-limited API access, and comprehensive OpenAPI 3.1 documentation for enterprise reliability.</p>
            </div>
          </div>

          <div class="mt-12 lg:mt-16 text-center">
            <a class="group relative px-6 py-3 lg:px-8 lg:py-4 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold text-base lg:text-lg transition-all duration-200 hover:shadow-[0_0_30px_rgba(234,179,8,0.4)] overflow-hidden inline-block" href="/app">
              <span class="relative z-10">Start Building with ChainFetch</span>
              <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- API Endpoints Section -->
    <div class="border-b bg-[#1E293B] border-gray-500/50"></div>
    
    <!-- API Endpoints Introduction -->
    <section class="py-12 bg-[#1E293B]" id="api-endpoints">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto text-center">
          <div class="inline-block mb-6 px-4 py-2 bg-blue-500/10 rounded-full border border-blue-500/20">
            <span class="text-blue-400 font-semibold">🔧 API Endpoints</span>
          </div>
          <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-white">
            Comprehensive Blockchain Data Access
          </h2>
          <p class="text-lg sm:text-xl text-gray-300 mb-8 max-w-3xl mx-auto">
            Our API provides powerful search capabilities on the Ethereum blockchain. Perform intelligent queries on <strong class="text-blue-400">Blocks</strong>, <strong class="text-yellow-400">Transactions</strong>, <strong class="text-green-400">Addresses</strong>, <strong class="text-purple-400">Smart Contracts</strong>, and <strong class="text-red-400">Tokens</strong> using semantic search, LLM-powered queries, AI summaries, or direct JSON filtering.
          </p>
          <div class="flex flex-wrap justify-center gap-3 text-sm">
            <span class="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full border border-blue-500/30">📦 Blocks</span>
            <span class="px-3 py-1 bg-yellow-500/20 text-yellow-300 rounded-full border border-yellow-500/30">💸 Transactions</span>
            <span class="px-3 py-1 bg-green-500/20 text-green-300 rounded-full border border-green-500/30">🏠 Addresses</span>
            <span class="px-3 py-1 bg-purple-500/20 text-purple-300 rounded-full border border-purple-500/30">📜 Smart Contracts</span>
            <span class="px-3 py-1 bg-red-500/20 text-red-300 rounded-full border border-red-500/30">🪙 Tokens</span>
          </div>
        </div>
      </div>
    </section>

    <section class="pt-20 bg-[#1E293B] p-5" id="semantic-search-endpoint">
      <div class="grid sm:grid-cols-2 gap-8 max-w-2xl sm:max-w-7xl mx-auto overflow-hidden">
        <div class="container mx-auto h-full endpoint-block" data-endpoint="semantic-search-endpoint">
          <div class="flex flex-col justify-between h-full">
            <div class="mb-12">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 text-white">
                <a href="#semantic-search-endpoint" class="hover:text-blue-400 transition-colors">Semantic Search Endpoint</a>
              </h2>
              <p class="text-gray-400 text-lg">
                Query blockchain data using natural language. Our AI-powered semantic search understands intent and context to find relevant addresses, transactions, and blocks using vector embeddings and similarity matching.
              </p>
            </div>

            <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full h-full">
              <div class="flex border-b border-gray-700">
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">CURL</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">JAVASCRIPT</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">PYTHON</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">RUBY</button>
              </div>
              
              <div class="relative">
                <pre class="p-6 overflow-x-auto">
                  <div class="code-content font-mono text-sm text-gray-300"></div>
                </pre>
              </div>
            </div>
          </div>
        </div>
        <div class="flex flex-col justify-between h-full relative z-10 max-w-sm sm:max-w-full">
          <div class="flex flex-col">
            <div class="mb-8 text-center">
              <%= link_to "Go to playground", "https://docs.chainfetch.app/api-reference/api/semantic-search", class: "block py-3 bg-transparent border-2 border-blue-500/30 rounded-md font-semibold transition-all duration-200 hover:border-blue-500/60 hover:bg-blue-500/10 text-gray-300 mr-4 sm:mr-0" %>
            </div>
            <div class="text-center mb-8 mr-4 sm:mr-0">
              <%= link_to "/app", class: "w-full group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-md font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                <span class="relative z-10">Get Started with Instant Access</span>
                <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
              <% end %>
            </div>
          </div>
          <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full p-5">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center text-blue-400">
                <span class="font-mono text-sm">API Response</span>
              </div>
            </div>
      
            <pre class="-ml-12 sm:-ml-0 bg-[#0F172A] p-5 rounded-md text-sm font-mono overflow-x-auto border border-gray-800 shadow-inner">
      <code>
      <span class="text-yellow-400">{</span>
      <span class="text-orange-400">  "result"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">    "points"</span><span class="text-gray-300">: [</span>
      <span class="text-yellow-400">      {</span>
      <span class="text-orange-400">        "id"</span><span class="text-gray-300">: </span><span class="text-blue-400">1</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">        "score"</span><span class="text-gray-300">: </span><span class="text-blue-400">0.95</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">        "payload"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">          "address_summary"</span><span class="text-gray-300">: </span><span class="text-green-400">"High-value DeFi whale..."</span>
      <span class="text-gray-300">        }</span>
      <span class="text-yellow-400">      }</span>
      <span class="text-gray-300">    ]</span>
      <span class="text-gray-300">  }</span>
      <span class="text-yellow-400">}</span>
      </code>
      </pre>
      
            <div class="mt-4 pt-4 border-t border-gray-700/50">
              <div class="text-xs text-gray-500 flex items-center justify-between">
                <span>Type: Semantic</span>
                <span>Query: "whale addresses"</span>
                <span>Time: 0.8s</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Summary Endpoint -->
    <div class="border-b bg-[#1E293B] border-gray-500/50 sm:py-8"></div>
    <section class="sm:pt-20 bg-[#1E293B] p-5" id="summary-endpoint">
      <div class="grid sm:grid-cols-2 gap-8 max-w-7xl mx-auto overflow-hidden">
        <div class="container mx-auto endpoint-block" data-endpoint="summary-endpoint">
          <div class="flex flex-col justify-between h-full">
            <div class="mb-12">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 text-white"><a href="#summary-endpoint" class="hover:text-blue-400 transition-colors">AI Summary Endpoint</a></h2>
              <p class="text-gray-400 text-lg">
                Generate intelligent AI-powered summaries of blockchain entities. Our advanced models analyze addresses, transactions, tokens, and blocks to create comprehensive human-readable descriptions with contextual insights and behavioral analysis.
              </p>
            </div>

            <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full h-full">
              <div class="flex border-b border-gray-700">
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">CURL</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">JAVASCRIPT</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">PYTHON</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">RUBY</button>
              </div>
              
              <div class="relative">
                <pre class="p-6 overflow-x-auto">
                  <div class="code-content font-mono text-sm text-gray-300"></div>
                </pre>
              </div>
            </div>
          </div>
        </div>
        <div class="flex flex-col justify-between h-full relative z-10 max-w-sm sm:max-w-full">
          <div class="flex flex-col">
            <div class="mb-8 text-center">
              <%= link_to "Go to playground", "https://docs.chainfetch.app/api-reference/api/summary", class: "block py-3 bg-transparent border-2 border-blue-500/30 rounded-md font-semibold transition-all duration-200 hover:border-blue-500/60 hover:bg-blue-500/10 text-gray-300 mr-4 sm:mr-0" %>
            </div>
            <div class="text-center mb-8 mr-4 sm:mr-0">
              <%= link_to "/app", class: "w-full group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-md font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                <span class="relative z-10">Get Started with Instant Access</span>
                <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
              <% end %>
            </div>
          </div>
          <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full p-5">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center text-blue-400">
                <span class="font-mono text-sm">AI Summary Response</span>
              </div>
            </div>
      
            <pre class="-ml-12 sm:-ml-0 bg-[#0F172A] p-5 rounded-md text-sm font-mono overflow-x-auto border border-gray-800 shadow-inner">
      <code>
      <span class="text-yellow-400">{</span>
      <span class="text-orange-400">  "summary"</span><span class="text-gray-300">: </span><span class="text-green-400">"Address 0x742d... is a standard EOA with</span>
      <span class="text-green-400">  1,247.3 ETH, classifying it as a 'Whale'.</span>
      <span class="text-green-400">  The address has executed 892 transactions</span>
      <span class="text-green-400">  and interacted with protocols like Uniswap,</span>
      <span class="text-green-400">  Aave, and Compound. It demonstrates high</span>
      <span class="text-green-400">  DeFi activity with diversified holdings..."</span>
      <span class="text-yellow-400">}</span>
      </code>
      </pre>
      
            <div class="mt-4 pt-4 border-t border-gray-700/50">
              <div class="text-xs text-gray-500 flex items-center justify-between">
                <span>Type: AI Summary</span>
                <span>Entity: Address</span>
                <span>Time: 1.2s</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- LLM Search Endpoint -->
    <div class="border-b bg-[#1E293B] border-gray-500/50 sm:py-8"></div>
    <section class="sm:pt-20 bg-[#1E293B] p-5" id="llm-search-endpoint">
      <div class="grid sm:grid-cols-2 gap-8 max-w-7xl mx-auto overflow-hidden">
        <div class="container mx-auto endpoint-block" data-endpoint="llm-search-endpoint">
          <div class="flex flex-col justify-between h-full">
            <div class="mb-12">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 text-white"><a href="#llm-search-endpoint" class="hover:text-blue-400 transition-colors">LLM Search Endpoint</a></h2>
              <p class="text-gray-400 text-lg">
                Let AI select the best parameters for your query. Our LLaMA 3.2 3B model analyzes your natural language request and intelligently chooses from 150+ address parameters, 254 transaction parameters, or 120+ block parameters.
              </p>
            </div>

            <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full h-full">
              <div class="flex border-b border-gray-700">
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">CURL</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">JAVASCRIPT</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">PYTHON</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">RUBY</button>
              </div>
              
              <div class="relative">
                <pre class="p-6 overflow-x-auto">
                  <div class="code-content font-mono text-sm text-gray-300"></div>
                </pre>
              </div>
            </div>
          </div>
        </div>
        <div class="flex flex-col justify-between h-full relative z-10 max-w-sm sm:max-w-full">
          <div class="flex flex-col">
            <div class="mb-8 text-center">
              <%= link_to "Go to playground", "https://docs.chainfetch.app/api-reference/api/llm-search", class: "block py-3 bg-transparent border-2 border-blue-500/30 rounded-md font-semibold transition-all duration-200 hover:border-blue-500/60 hover:bg-blue-500/10 text-gray-300 mr-4 sm:mr-0" %>
            </div>
            <div class="text-center mb-8 mr-4 sm:mr-0">
              <%= link_to "/app", class: "w-full group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-md font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                <span class="relative z-10">Get Started with Instant Access</span>
                <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
              <% end %>
            </div>
          </div>
          <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full p-5">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center text-blue-400">
                <span class="font-mono text-sm">AI-Generated Query</span>
              </div>
            </div>
      
            <pre class="-ml-12 sm:-ml-0 bg-[#0F172A] p-5 rounded-md text-sm font-mono overflow-x-auto border border-gray-800 shadow-inner">
      <code>
      <span class="text-gray-300">Input: </span><span class="text-green-400">"addresses ordered by eth balance"</span>

      <span class="text-gray-300">AI Response:</span>
      <span class="text-yellow-400">{</span>
      <span class="text-orange-400">  "count"</span><span class="text-gray-300">: </span><span class="text-blue-400">10</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">  "parameters_used"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">    "limit"</span><span class="text-gray-300">: </span><span class="text-blue-400">10</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">    "sort_by"</span><span class="text-gray-300">: </span><span class="text-green-400">"eth_balance"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">    "sort_order"</span><span class="text-gray-300">: </span><span class="text-green-400">"desc"</span>
      <span class="text-gray-300">  },</span>
      <span class="text-orange-400">  "addresses"</span><span class="text-gray-300">: [</span>
      <span class="text-green-400">    "0x267be1C1D684F78cb4F6a176C4911b741E4Ffdc0"</span><span class="text-gray-300">,</span>
      <span class="text-green-400">    "0x28C6c06298d514Db089934071355E5743bf21d60"</span><span class="text-gray-300">,</span>
      <span class="text-green-400">    "0xA9Ac43f5b5e38155A288d1A01D2cbc4478E14573"</span>
      <span class="text-gray-300">  ]</span>
      <span class="text-yellow-400">}</span>
      </code>
      </pre>
      
            <div class="mt-4 pt-4 border-t border-gray-700/50">
              <div class="text-xs text-gray-500 flex items-center justify-between">
                <span>Model: LLaMA 3.2 3B</span>
                <span>Parameters: 3/150</span>
                <span>Time: 0.9s</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- JSON Search Endpoint -->
    <div class="border-b bg-[#1E293B] border-gray-500/50 sm:pb-16"></div>
    <section class="sm:pt-20 bg-[#1E293B] p-5" id="json-search-endpoint">
      <div class="grid sm:grid-cols-2 gap-8 max-w-2xl sm:max-w-7xl mx-auto overflow-hidden">
        <div class="container mx-auto h-full endpoint-block" data-endpoint="json-search-endpoint">
          <div class="flex flex-col justify-between h-full">
            <div class="mb-12">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 text-white"><a href="#json-search-endpoint" class="hover:text-blue-400 transition-colors">JSON Search Endpoint</a></h2>
              <p class="text-gray-400 text-lg">
                Direct parameter-based filtering with real-time data enrichment. Use precise filters across addresses (150+ params), transactions (254 params), and blocks (120+ params) for exact control over your queries.
              </p>
            </div>

            <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full h-full">
              <div class="flex border-b border-gray-700">
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">CURL</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">JAVASCRIPT</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">PYTHON</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">RUBY</button>
              </div>
              
              <div class="relative">
                <pre class="p-6 overflow-x-auto">
                  <div class="code-content font-mono text-sm text-gray-300"></div>
                </pre>
              </div>
            </div>
          </div>
        </div>
        <div class="flex flex-col justify-between h-full relative z-10 max-w-sm sm:max-w-full">
          <div class="flex flex-col">
            <div class="mb-8 text-center">
              <%= link_to "Go to playground", "https://docs.chainfetch.app/api-reference/api/json-search", class: "block py-3 bg-transparent border-2 border-blue-500/30 rounded-md font-semibold transition-all duration-200 hover:border-blue-500/60 hover:bg-blue-500/10 text-gray-300 mr-4 sm:mr-0" %>
            </div>
            <div class="text-center mb-8 mr-4 sm:mr-0">
              <%= link_to "/app", class: "w-full group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-md font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                <span class="relative z-10">Get Started with Instant Access</span>
                <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
              <% end %>
            </div>
          </div>
          <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full p-5">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center text-blue-400">
                <span class="font-mono text-sm">Structured Response</span>
              </div>
            </div>
      
            <pre class="-ml-12 sm:-ml-0 bg-[#0F172A] p-5 rounded-md text-sm font-mono overflow-x-auto border border-gray-800 shadow-inner">
      <code>
      <span class="text-yellow-400">{</span>
      <span class="text-orange-400">  "results"</span><span class="text-gray-300">: [</span>
      <span class="text-yellow-400">    {</span>
      <span class="text-orange-400">      "id"</span><span class="text-gray-300">: </span><span class="text-blue-400">1</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">      "address_hash"</span><span class="text-gray-300">: </span><span class="text-green-400">"0x742d35..."</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">      "data"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">        "eth_balance"</span><span class="text-gray-300">: </span><span class="text-green-400">"1500.5"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">        "is_contract"</span><span class="text-gray-300">: </span><span class="text-blue-400">false</span>
      <span class="text-gray-300">      }</span>
      <span class="text-yellow-400">    }</span>
      <span class="text-gray-300">  ],</span>
      <span class="text-orange-400">  "pagination"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">    "total"</span><span class="text-gray-300">: </span><span class="text-blue-400">1247</span>
      <span class="text-gray-300">  }</span>
      <span class="text-yellow-400">}</span>
      </code>
      </pre>
      
            <div class="mt-4 pt-4 border-t border-gray-700/50">
              <div class="text-xs text-gray-500 flex items-center justify-between">
                <span>Type: Direct Filter</span>
                <span>Results: 1,247</span>
                <span>Time: 0.3s</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- WebSocket Streaming Endpoint -->
    <div class="border-b bg-[#1E293B] border-gray-500/50 sm:py-8"></div>
    <section class="sm:pt-20 bg-[#1E293B] p-5" id="websocket-endpoint">
      <div class="grid sm:grid-cols-2 gap-8 max-w-7xl mx-auto overflow-hidden">
        <div class="container mx-auto endpoint-block" data-endpoint="websocket-endpoint">
          <div class="flex flex-col justify-between h-full">
            <div class="mb-12">
              <h2 class="text-3xl md:text-4xl font-bold mb-6 text-white"><a href="#websocket-endpoint" class="hover:text-blue-400 transition-colors">Summary WebSocket Streaming</a></h2>
              <p class="text-gray-400 text-lg">
                Real-time blockchain data streaming via WebSocket. Subscribe to live Ethereum block feeds and receive instant notifications as new blocks are mined and processed through our AI pipeline.
              </p>
            </div>

            <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full h-full">
              <div class="flex border-b border-gray-700">
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">JAVASCRIPT</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">PYTHON</button>
                <button class="code-tab px-6 py-3 font-mono text-sm text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors">RUBY</button>
              </div>
              
              <div class="relative">
                <pre class="p-6 overflow-x-auto">
                  <div class="code-content font-mono text-sm text-gray-300"></div>
                </pre>
              </div>
            </div>
          </div>
        </div>
        <div class="flex flex-col justify-between h-full relative z-10 max-w-sm sm:max-w-full">
          <div class="flex flex-col">
            <div class="mb-8 text-center">
              <%= link_to "Go to playground", "https://docs.chainfetch.app/api-reference/websocket", class: "block py-3 bg-transparent border-2 border-blue-500/30 rounded-md font-semibold transition-all duration-200 hover:border-blue-500/60 hover:bg-blue-500/10 text-gray-300 mr-4 sm:mr-0" %>
            </div>
            <div class="text-center mb-8 mr-4 sm:mr-0">
              <%= link_to "/app", class: "w-full group relative px-6 py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-md font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)] overflow-hidden inline-block" do %>
                <span class="relative z-10">Get Started with Instant Access</span>
                <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
              <% end %>
            </div>
          </div>
          <div class="bg-[#0F172A] rounded-xl overflow-hidden border border-blue-500/20 max-w-sm sm:max-w-full p-5">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center text-blue-400">
                <span class="font-mono text-sm">Live Stream Response</span>
              </div>
            </div>
      
            <pre class="-ml-12 sm:-ml-0 bg-[#0F172A] p-5 rounded-md text-sm font-mono overflow-x-auto border border-gray-800 shadow-inner">
      <code>
      <span class="text-gray-300">// Connection established</span>
      <span class="text-yellow-400">{</span>
      <span class="text-orange-400">  "type"</span><span class="text-gray-300">: </span><span class="text-green-400">"welcome"</span><span class="text-gray-300"></span>
      <span class="text-yellow-400">}</span>

      <span class="text-gray-300">// Real-time block data</span>
      <span class="text-yellow-400">{</span>
      <span class="text-orange-400">  "identifier"</span><span class="text-gray-300">: </span><span class="text-green-400">"{\"channel\":\"EthereumBlocksChannel\"}"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">  "message"</span><span class="text-gray-300">: {</span>
      <span class="text-orange-400">    "block_number"</span><span class="text-gray-300">: </span><span class="text-blue-400">23134685</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">    "summary"</span><span class="text-gray-300">: </span><span class="text-green-400">"Block 23134685 was mined with 232 transactions and 16 withdrawals. Size: 148.21 KB, Gas used: 55.67%. Base fee: 1.19 gwei, fees: 0.049268 ETH, transfers: 36.345481 ETH. 229 succeeded, 3 failed. 373 unique addresses, 155 contract calls..."</span>
      <span class="text-gray-300">  }</span>
      <span class="text-yellow-400">}</span>
      </code>
      </pre>
      
            <div class="mt-4 pt-4 border-t border-gray-700/50">
              <div class="text-xs text-gray-500 flex items-center justify-between">
                <span>Protocol: WebSocket</span>
                <span>Frequency: ~12s</span>
                <span>Live: ✅</span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="h-10"></div>
    </section>

    <!-- Technical Architecture Section -->
    <div class="border-b bg-[#1E293B] border-gray-500/50"></div>
    <section class="py-12 sm:py-16 lg:py-20 bg-[#0F172A]" id="architecture">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">
          <div class="text-center mb-12 lg:mb-16">
            <div class="inline-block mb-4 lg:mb-6 px-3 py-1.5 lg:px-4 lg:py-2 bg-blue-500/10 rounded-full border border-blue-500/20">
              <span class="text-blue-400 font-semibold text-sm lg:text-base">🏗️ Architecture</span>
            </div>
            <h2 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 lg:mb-6 text-white leading-tight">
              Intelligent Data Pipeline Architecture
            </h2>
            <p class="text-lg sm:text-xl text-gray-300 max-w-3xl mx-auto px-4">
              ChainFetch operates as a sophisticated blockchain intelligence engine that transforms raw Ethereum data into actionable insights through advanced AI processing.
            </p>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-start">
            <!-- Data Flow Diagram -->
            <div class="bg-[#1E293B]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
              <h3 class="text-xl lg:text-2xl font-bold text-white mb-6">Real-Time Processing Pipeline</h3>
              
              <div class="space-y-6">
                <!-- Step 1 -->
                <div class="flex items-start">
                  <div class="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-sm mr-4 mt-1">1</div>
                  <div>
                    <h4 class="font-semibold text-white mb-2 text-sm lg:text-base">WebSocket Block Streaming</h4>
                    <p class="text-gray-400 text-sm lg:text-base">Persistent connection to <code class="bg-gray-800 px-2 py-1 rounded text-xs">wss://ethereum-rpc.publicnode.com</code> captures new blocks every ~12 seconds via <code class="bg-gray-800 px-2 py-1 rounded text-xs">eth_subscribe ["newHeads"]</code></p>
                  </div>
                </div>
                
                <!-- Step 2 -->
                <div class="flex items-start">
                  <div class="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-sm mr-4 mt-1">2</div>
                  <div>
                    <h4 class="font-semibold text-white mb-2 text-sm lg:text-base">Intelligent Data Enrichment</h4>
                    <p class="text-gray-400 text-sm lg:text-base">Async jobs extract transactions, discover addresses, and build interaction graphs with probabilistic AI summary generation (2% transactions, 6.7% addresses)</p>
                  </div>
                </div>
                
                <!-- Step 3 -->
                <div class="flex items-start">
                  <div class="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-sm mr-4 mt-1">3</div>
                  <div>
                    <h4 class="font-semibold text-white mb-2 text-sm lg:text-base">Vector Embedding Generation</h4>
                    <p class="text-gray-400 text-sm lg:text-base">Qwen3-Embedding-0.6B (Q8_0 quantized) transforms summaries into high-dimensional vectors stored in specialized Qdrant collections</p>
                  </div>
                </div>
                
                <!-- Step 4 -->
                <div class="flex items-start">
                  <div class="flex-shrink-0 w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-sm mr-4 mt-1">4</div>
                  <div>
                    <h4 class="font-semibold text-white mb-2 text-sm lg:text-base">Multi-Modal Query Processing</h4>
                    <p class="text-gray-400 text-sm lg:text-base">Support for semantic similarity search, LLM-powered parameter selection, and direct JSON filtering with concurrent processing for maximum throughput</p>
                  </div>
                </div>
              </div>
            </div>

            <!-- Technical Stack -->
            <div class="space-y-6 lg:space-y-8">
              <!-- AI & ML Stack -->
              <div class="bg-[#1E293B]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
                <div class="flex items-center mb-4">
                  <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center mr-3 lg:mr-4 flex-shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-white lg:w-6 lg:h-6">
                      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                    </svg>
                  </div>
                  <div class="min-w-0">
                    <h3 class="text-lg lg:text-xl font-bold text-white">AI & ML Stack</h3>
                    <p class="text-sm lg:text-base text-gray-400">Advanced AI Processing</p>
                  </div>
                </div>
                
                <div class="space-y-3">
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Embeddings Model</span>
                    <span class="text-blue-400 text-sm lg:text-base font-mono">Qwen3-0.6B Q8_0</span>
                  </div>
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">LLM Model</span>
                    <span class="text-blue-400 text-sm lg:text-base font-mono">LLaMA 3.2 3B</span>
                  </div>
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Vector Database</span>
                    <span class="text-blue-400 text-sm lg:text-base font-mono">Qdrant</span>
                  </div>
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Search Algorithm</span>
                    <span class="text-blue-400 text-sm lg:text-base font-mono">Cosine Similarity</span>
                  </div>
                </div>
              </div>

              <!-- Infrastructure Stack -->
              <div class="bg-[#1E293B]/80 backdrop-blur-sm rounded-xl p-6 lg:p-8 border border-blue-500/20">
                <div class="flex items-center mb-4">
                  <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-r from-green-500 to-blue-500 rounded-lg flex items-center justify-center mr-3 lg:mr-4 flex-shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-white lg:w-6 lg:h-6">
                      <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path>
                    </svg>
                  </div>
                  <div class="min-w-0">
                    <h3 class="text-lg lg:text-xl font-bold text-white">Infrastructure</h3>
                    <p class="text-sm lg:text-base text-gray-400">Production-Ready Deployment</p>
                  </div>
                </div>
                
                <div class="space-y-3">
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Orchestration</span>
                    <span class="text-green-400 text-sm lg:text-base font-mono">Kubernetes</span>
                  </div>
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Application</span>
                    <span class="text-green-400 text-sm lg:text-base font-mono">Ruby on Rails</span>
                  </div>
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Async Processing</span>
                    <span class="text-green-400 text-sm lg:text-base font-mono">Soliq Queue</span>
                  </div>
                  <div class="flex items-center justify-between">
                    <span class="text-gray-300 text-sm lg:text-base">Documentation</span>
                    <span class="text-green-400 text-sm lg:text-base font-mono">OpenAPI 3.1</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="mt-12 lg:mt-16 text-center">
            <a class="group relative px-6 py-3 lg:px-8 lg:py-4 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold text-base lg:text-lg transition-all duration-200 hover:shadow-[0_0_30px_rgba(234,179,8,0.4)] overflow-hidden inline-block" href="/app">
              <span class="relative z-10">Experience the Architecture</span>
              <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Use Cases Section -->
    <section class="py-20 bg-[#1E293B]" id="use-cases">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">
          <div class="text-center mb-16">
            <div class="inline-block mb-6 px-4 py-2 bg-blue-500/10 rounded-full border border-blue-500/20">
              <span class="text-blue-400 font-semibold">💡 Use Cases</span>
            </div>
            <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-white">
              Built for Modern Blockchain Applications
            </h2>
            <p class="text-xl text-gray-300 max-w-3xl mx-auto">
              From DeFi analytics to compliance monitoring, ChainFetch powers intelligent blockchain applications across industries.
            </p>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <!-- DeFi Analytics -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-8 border border-blue-500/20 hover:border-blue-500/40 transition-all duration-300">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500">
                  <path d="M3 3v18h18"></path>
                  <path d="M13 17V9"></path>
                  <path d="M18 17V5"></path>
                  <path d="M8 17v-3"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white mb-4">DeFi Analytics</h3>
              <p class="text-gray-400 mb-6">Track liquidity flows, yield farming strategies, and protocol interactions. Identify trending DeFi protocols and analyze user behavior patterns.</p>
              <div class="space-y-2">
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Liquidity pool analysis</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Yield farming tracking</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>MEV detection</span>
                </div>
              </div>
            </div>

            <!-- Compliance & AML -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-8 border border-blue-500/20 hover:border-blue-500/40 transition-all duration-300">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500">
                  <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white mb-4">Compliance & AML</h3>
              <p class="text-gray-400 mb-6">Monitor suspicious activities, track fund flows, and ensure regulatory compliance. Identify risk patterns and flag unusual transaction behaviors.</p>
              <div class="space-y-2">
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Risk scoring</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Suspicious pattern detection</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Transaction clustering</span>
                </div>
              </div>
            </div>

            <!-- NFT Market Intelligence -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-8 border border-blue-500/20 hover:border-blue-500/40 transition-all duration-300">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500">
                  <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                  <circle cx="8.5" cy="8.5" r="1.5"></circle>
                  <path d="M21 15l-5-5L5 21"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white mb-4">NFT Market Intelligence</h3>
              <p class="text-gray-400 mb-6">Analyze NFT trading patterns, collection performance, and market trends. Track holder behavior and identify emerging collections.</p>
              <div class="space-y-2">
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Collection analytics</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Holder analysis</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Price trend prediction</span>
                </div>
              </div>
            </div>

            <!-- Portfolio Management -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-8 border border-blue-500/20 hover:border-blue-500/40 transition-all duration-300">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500">
                  <circle cx="12" cy="12" r="10"></circle>
                  <path d="M16 12L12 8l-4 4"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white mb-4">Portfolio Management</h3>
              <p class="text-gray-400 mb-6">Real-time portfolio tracking, performance analytics, and risk assessment. Monitor holdings across multiple addresses and protocols.</p>
              <div class="space-y-2">
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Multi-address tracking</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>P&L calculations</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Risk metrics</span>
                </div>
              </div>
            </div>

            <!-- Research & Analytics -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-8 border border-blue-500/20 hover:border-blue-500/40 transition-all duration-300">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500">
                  <circle cx="11" cy="11" r="8"></circle>
                  <path d="m21 21-4.35-4.35"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white mb-4">Research & Analytics</h3>
              <p class="text-gray-400 mb-6">Deep blockchain research, market analysis, and academic studies. Access comprehensive datasets for quantitative analysis.</p>
              <div class="space-y-2">
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Historical analysis</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Network metrics</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Behavioral patterns</span>
                </div>
              </div>
            </div>

            <!-- Smart Contract Monitoring -->
            <div class="bg-[#0F172A]/80 backdrop-blur-sm rounded-xl p-8 border border-blue-500/20 hover:border-blue-500/40 transition-all duration-300">
              <div class="inline-block p-3 bg-blue-500/10 rounded-lg mb-6">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-blue-500">
                  <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                  <polyline points="14,2 14,8 20,8"></polyline>
                  <line x1="16" y1="13" x2="8" y2="13"></line>
                  <line x1="16" y1="17" x2="8" y2="17"></line>
                  <polyline points="10,9 9,9 8,9"></polyline>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white mb-4">Smart Contract Monitoring</h3>
              <p class="text-gray-400 mb-6">Monitor smart contract interactions, gas optimization, and security events. Track contract upgrades and usage patterns.</p>
              <div class="space-y-2">
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Contract interactions</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Gas analysis</span>
                </div>
                <div class="flex items-center text-sm text-gray-300">
                  <div class="w-2 h-2 bg-blue-400 rounded-full mr-2"></div>
                  <span>Security monitoring</span>
                </div>
              </div>
            </div>
          </div>

          <div class="mt-12 text-center">
            <%= link_to "/app", class: "group relative px-8 py-4 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold text-lg transition-all duration-200 hover:shadow-[0_0_30px_rgba(234,179,8,0.4)] overflow-hidden inline-block" do %>
              <span class="relative z-10">Start Building Your Use Case</span>
              <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
            <% end %>
          </div>
        </div>
      </div>
    </section>

    <!-- Pricing Section -->
    <section class="py-20 bg-[#0F172A]" id="pricing">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">
          <div class="text-center mb-16">
            <div class="inline-block mb-6 px-4 py-2 bg-blue-500/10 rounded-full border border-blue-500/20">
              <span class="text-blue-400 font-semibold">💰 Simple Pricing</span>
            </div>
            <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-6 text-white">
              Pay Only for What You Use
            </h2>
            <p class="text-xl text-gray-300 max-w-3xl mx-auto">
              Transparent, credit-based pricing with no hidden fees. Every API endpoint costs exactly 1 credit - whether it's semantic search, LLM processing, or direct queries. <strong class="text-green-400">Start with 50 free credits!</strong>
            </p>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-5xl mx-auto">

            <div class="bg-[#1E293B]/80 backdrop-blur-sm rounded-xl p-8 border border-yellow-500/20 relative">
              <div class="text-center">

                <div class="mb-6">
                  <span class="text-4xl font-bold text-yellow-400">$3</span>
                  <span class="text-gray-400 ml-2">= 3,000 credits</span>
                </div>

                
                <div class="space-y-4 mb-8">
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>3,000 API calls</span>
                  </div>
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>All API endpoints</span>
                  </div>
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>Community support</span>
                  </div>
                </div>

                <a href="/app" class="block w-full py-3 bg-transparent border-2 border-yellow-500/30 rounded-lg font-semibold transition-all duration-200 hover:border-yellow-500/60 hover:bg-yellow-500/10 text-gray-300">
                  Get Started
                </a>
              </div>
            </div>


            <div class="bg-[#1E293B]/80 backdrop-blur-sm rounded-xl p-8 border-2 border-yellow-500 relative transform scale-105">
              <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
                <span class="bg-gradient-to-r from-yellow-500 to-red-500 text-white px-4 py-2 rounded-full text-sm font-semibold">
                  Most Popular
                </span>
              </div>
              
              <div class="text-center">

                <div class="mb-6">
                  <span class="text-4xl font-bold text-yellow-400">$5</span>
                  <span class="text-gray-400 ml-2">= 5,000 credits</span>
                </div>

                
                <div class="space-y-4 mb-8">
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>5,000 API calls</span>
                  </div>
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>All API endpoints</span>
                  </div>
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>Priority support</span>
                  </div>
                </div>

                <a href="/app" class="block w-full py-3 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold transition-all duration-200 hover:shadow-[0_0_20px_rgba(234,179,8,0.3)]">
                  Start Pro
                </a>
              </div>
            </div>


            <div class="bg-[#1E293B]/80 backdrop-blur-sm rounded-xl p-8 border border-yellow-500/20 relative">
              <div class="text-center">

                <div class="mb-6">
                  <span class="text-4xl font-bold text-yellow-400">$10</span>
                  <span class="text-gray-400 ml-2">= 10,000 credits</span>
                </div>

                
                <div class="space-y-4 mb-8">
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>10,000 API calls</span>
                  </div>
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>All API endpoints</span>
                  </div>
                  <div class="flex items-center text-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-400 mr-3 flex-shrink-0">
                      <path d="M20 6L9 17l-5-5"></path>
                    </svg>
                    <span>Dedicated support</span>
                  </div>
                </div>

                <a href="/app" class="block w-full py-3 bg-transparent border-2 border-yellow-500/30 rounded-lg font-semibold transition-all duration-200 hover:border-yellow-500/60 hover:bg-yellow-500/10 text-gray-300">
                  Contact Sales
                </a>
              </div>
            </div>
          </div>

          <!-- Pricing Details -->
          <div class="mt-16 text-center">
            <div class="bg-[#1E293B]/50 backdrop-blur-sm rounded-xl p-8 border border-yellow-500/20 max-w-4xl mx-auto">
              <h3 class="text-2xl font-bold text-white mb-6">Simple, Transparent Pricing</h3>
              <div class="text-center max-w-2xl mx-auto">
                <h4 class="text-lg font-semibold text-yellow-400 mb-4">How Credits Work</h4>
                <div class="space-y-3">
                  <div class="flex items-start justify-center">
                    <div class="w-2 h-2 bg-yellow-400 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                    <span class="text-gray-300 text-sm lg:text-base">Every API endpoint costs exactly <strong class="text-white">1 credit</strong></span>
                  </div>
                  <div class="flex items-start justify-center">
                    <div class="w-2 h-2 bg-yellow-400 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                    <span class="text-gray-300 text-sm lg:text-base">Semantic search, LLM queries, JSON filtering - all 1 credit each</span>
                  </div>
                  <div class="flex items-start justify-center">
                    <div class="w-2 h-2 bg-yellow-400 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                    <span class="text-gray-300 text-sm lg:text-base">Credits never expire once purchased</span>
                  </div>
                  <div class="flex items-start justify-center">
                    <div class="w-2 h-2 bg-yellow-400 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                    <span class="text-gray-300 text-sm lg:text-base">No monthly subscriptions or hidden fees</span>
                  </div>
                  <div class="flex items-start justify-center">
                    <div class="w-2 h-2 bg-yellow-400 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                    <span class="text-gray-300 text-sm lg:text-base">Consistent rate: <strong class="text-white">$1 = 1,000 credits</strong></span>
                  </div>
                  <div class="flex items-start justify-center">
                    <div class="w-2 h-2 bg-green-400 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                    <span class="text-gray-300 text-sm lg:text-base"><strong class="text-green-400">50 free credits</strong> to get started</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="mt-12 text-center">
            <a class="group relative px-8 py-4 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold text-lg transition-all duration-200 hover:shadow-[0_0_30px_rgba(234,179,8,0.4)] overflow-hidden inline-block" href="/app">
              <span class="relative z-10">Start with 50 Free Credits Today</span>
              <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Footer CTA -->
    <section class="py-16 bg-[#0F172A] border-t border-gray-800">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl md:text-4xl font-bold text-white mb-4">
          Ready to Build with ChainFetch?
        </h2>
        <p class="text-xl text-gray-300 mb-6 max-w-2xl mx-auto">
          Experience the power of AI-driven blockchain intelligence. Get instant access to real-time Ethereum data with semantic search capabilities.
        </p>
        <div class="mb-8 inline-block p-3 bg-green-500/10 border border-green-500/20 rounded-lg">
          <span class="text-green-400 font-semibold">🎉 50 Free Credits • No Credit Card Required</span>
        </div>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <%= link_to "/app", class: "group relative px-8 py-4 bg-gradient-to-r from-yellow-500 to-red-500 text-white rounded-lg font-semibold text-lg transition-all duration-200 hover:shadow-[0_0_30px_rgba(234,179,8,0.4)] overflow-hidden inline-block" do %>
            <span class="relative z-10">Get API Access + 50 Free Credits</span>
            <span class="absolute inset-0 bg-gradient-to-r from-red-500 to-yellow-500 transition-transform duration-200 translate-x-full group-hover:translate-x-0"></span>
          <% end %>
          <%= link_to "Read Documentation", "https://docs.chainfetch.app", class: "px-8 py-4 bg-transparent border-2 border-yellow-500/30 rounded-lg font-semibold transition-all duration-200 hover:border-yellow-500/60 hover:bg-yellow-500/10 text-gray-300" %>
        </div>
      </div>
    </section>
  </main>
</div>

<script>
// Code example content for different endpoints
window.codeExamples = window.codeExamples || {
  'summary-endpoint': {
    'CURL': `<span class="text-blue-400">curl</span> <span class="text-purple-400">-X</span> <span class="text-yellow-400">GET</span> <span class="text-green-400">"https://api.chainfetch.app/api/v1/ethereum/addresses/summary"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"accept: application/json"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"authorization: Bearer YOUR_API_TOKEN"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"address_hash=0x742d35Cc6C4C4532332443243224523452345234"</span>`,
    'JAVASCRIPT': `<span class="text-blue-400">const</span> <span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-blue-400">fetch</span><span class="text-gray-300">(</span>
  <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/summary?'</span> <span class="text-purple-400">+</span> 
  <span class="text-yellow-400">new</span> <span class="text-blue-400">URLSearchParams</span><span class="text-gray-300">({</span>
    <span class="text-orange-400">address_hash</span><span class="text-gray-300">:</span> <span class="text-green-400">'0x742d35Cc6C4C4532332443243224523452345234'</span>
  <span class="text-gray-300">}), {</span>
    <span class="text-orange-400">method</span><span class="text-gray-300">:</span> <span class="text-green-400">'GET'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-gray-300">: {</span>
      <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
      <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">}</span>
  <span class="text-gray-300">}</span>
<span class="text-gray-300">);</span>

<span class="text-blue-400">const</span> <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">();</span>
<span class="text-white">console</span><span class="text-gray-300">.</span><span class="text-blue-400">log</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">.</span><span class="text-white">summary</span><span class="text-gray-300">);</span>`,
    'PYTHON': `<span class="text-yellow-400">import</span> <span class="text-blue-400">requests</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">requests</span><span class="text-gray-300">.</span><span class="text-blue-400">get</span><span class="text-gray-300">(</span>
    <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/summary'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">},</span>
    <span class="text-orange-400">params</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'address_hash'</span><span class="text-gray-300">:</span> <span class="text-green-400">'0x742d35Cc6C4C4532332443243224523452345234'</span>
    <span class="text-gray-300">}</span>
<span class="text-gray-300">)</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">()</span>
<span class="text-blue-400">print</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'summary'</span><span class="text-gray-300">])</span>`,
    'RUBY': `<span class="text-yellow-400">require</span> <span class="text-green-400">'net/http'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'json'</span>

<span class="text-white">uri</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">(</span><span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/summary'</span><span class="text-gray-300">)</span>
<span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">query</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">.</span><span class="text-blue-400">encode_www_form</span><span class="text-gray-300">({</span>
  <span class="text-orange-400">address_hash:</span> <span class="text-green-400">'0x742d35Cc6C4C4532332443243224523452345234'</span>
<span class="text-gray-300">})</span>

<span class="text-white">request</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP::Get</span><span class="text-gray-300">.</span><span class="text-blue-400">new</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">)</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'accept'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'application/json'</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'authorization'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP</span><span class="text-gray-300">.</span><span class="text-blue-400">start</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">hostname</span><span class="text-gray-300">,</span> <span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">port</span><span class="text-gray-300">,</span> <span class="text-orange-400">use_ssl:</span> <span class="text-blue-400">true</span><span class="text-gray-300">)</span> <span class="text-yellow-400">do</span> <span class="text-gray-300">|</span><span class="text-white">http</span><span class="text-gray-300">|</span>
  <span class="text-white">http</span><span class="text-gray-300">.</span><span class="text-blue-400">request</span><span class="text-gray-300">(</span><span class="text-white">request</span><span class="text-gray-300">)</span>
<span class="text-yellow-400">end</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span><span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-white">body</span><span class="text-gray-300">)</span>
<span class="text-blue-400">puts</span> <span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'summary'</span><span class="text-gray-300">]</span>`
  },
  'semantic-search-endpoint': {
    'CURL': `<span class="text-blue-400">curl</span> <span class="text-purple-400">-X</span> <span class="text-yellow-400">GET</span> <span class="text-green-400">"https://api.chainfetch.app/api/v1/ethereum/addresses/semantic_search"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"accept: application/json"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"authorization: Bearer YOUR_API_TOKEN"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"query=whale addresses with DeFi activity"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"limit=10"</span>`,
    'JAVASCRIPT': `<span class="text-blue-400">const</span> <span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-blue-400">fetch</span><span class="text-gray-300">(</span>
  <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/semantic_search?'</span> <span class="text-purple-400">+</span> 
  <span class="text-yellow-400">new</span> <span class="text-blue-400">URLSearchParams</span><span class="text-gray-300">({</span>
    <span class="text-orange-400">query</span><span class="text-gray-300">:</span> <span class="text-green-400">'whale addresses with DeFi activity'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">limit</span><span class="text-gray-300">:</span> <span class="text-green-400">'10'</span>
  <span class="text-gray-300">}), {</span>
    <span class="text-orange-400">method</span><span class="text-gray-300">:</span> <span class="text-green-400">'GET'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-gray-300">: {</span>
      <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
      <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">}</span>
  <span class="text-gray-300">}</span>
<span class="text-gray-300">);</span>

<span class="text-blue-400">const</span> <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">();</span>
<span class="text-white">console</span><span class="text-gray-300">.</span><span class="text-blue-400">log</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">.</span><span class="text-white">result</span><span class="text-gray-300">.</span><span class="text-white">points</span><span class="text-gray-300">);</span>`,
    'PYTHON': `<span class="text-yellow-400">import</span> <span class="text-blue-400">requests</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">requests</span><span class="text-gray-300">.</span><span class="text-blue-400">get</span><span class="text-gray-300">(</span>
    <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/semantic_search'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">},</span>
    <span class="text-orange-400">params</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'query'</span><span class="text-gray-300">:</span> <span class="text-green-400">'whale addresses with DeFi activity'</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'limit'</span><span class="text-gray-300">:</span> <span class="text-blue-400">10</span>
    <span class="text-gray-300">}</span>
<span class="text-gray-300">)</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">()</span>
<span class="text-blue-400">print</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'result'</span><span class="text-gray-300">][</span><span class="text-green-400">'points'</span><span class="text-gray-300">])</span>`,
    'RUBY': `<span class="text-yellow-400">require</span> <span class="text-green-400">'net/http'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'json'</span>

<span class="text-white">uri</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">(</span><span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/semantic_search'</span><span class="text-gray-300">)</span>
<span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">query</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">.</span><span class="text-blue-400">encode_www_form</span><span class="text-gray-300">({</span>
  <span class="text-orange-400">query:</span> <span class="text-green-400">'whale addresses with DeFi activity'</span><span class="text-gray-300">,</span>
  <span class="text-orange-400">limit:</span> <span class="text-blue-400">10</span>
<span class="text-gray-300">})</span>

<span class="text-white">request</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP::Get</span><span class="text-gray-300">.</span><span class="text-blue-400">new</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">)</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'accept'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'application/json'</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'authorization'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP</span><span class="text-gray-300">.</span><span class="text-blue-400">start</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">hostname</span><span class="text-gray-300">,</span> <span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">port</span><span class="text-gray-300">,</span> <span class="text-orange-400">use_ssl:</span> <span class="text-blue-400">true</span><span class="text-gray-300">)</span> <span class="text-yellow-400">do</span> <span class="text-gray-300">|</span><span class="text-white">http</span><span class="text-gray-300">|</span>
  <span class="text-white">http</span><span class="text-gray-300">.</span><span class="text-blue-400">request</span><span class="text-gray-300">(</span><span class="text-white">request</span><span class="text-gray-300">)</span>
<span class="text-yellow-400">end</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span><span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-white">body</span><span class="text-gray-300">)</span>
<span class="text-blue-400">puts</span> <span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'result'</span><span class="text-gray-300">][</span><span class="text-green-400">'points'</span><span class="text-gray-300">]</span>`
  },
  'llm-search-endpoint': {
    'CURL': `<span class="text-blue-400">curl</span> <span class="text-purple-400">-X</span> <span class="text-yellow-400">GET</span> <span class="text-green-400">"https://api.chainfetch.app/api/v1/ethereum/addresses/llm_search"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"accept: application/json"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"authorization: Bearer YOUR_API_TOKEN"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"query=Find high-value Ethereum addresses"</span>`,
    'JAVASCRIPT': `<span class="text-blue-400">const</span> <span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-blue-400">fetch</span><span class="text-gray-300">(</span>
  <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/llm_search?'</span> <span class="text-purple-400">+</span> 
  <span class="text-yellow-400">new</span> <span class="text-blue-400">URLSearchParams</span><span class="text-gray-300">({</span>
    <span class="text-orange-400">query</span><span class="text-gray-300">:</span> <span class="text-green-400">'Find high-value Ethereum addresses'</span>
  <span class="text-gray-300">}), {</span>
    <span class="text-orange-400">method</span><span class="text-gray-300">:</span> <span class="text-green-400">'GET'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-gray-300">: {</span>
      <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
      <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">}</span>
  <span class="text-gray-300">}</span>
<span class="text-gray-300">);</span>

<span class="text-blue-400">const</span> <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">();</span>
<span class="text-white">console</span><span class="text-gray-300">.</span><span class="text-blue-400">log</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">.</span><span class="text-white">results</span><span class="text-gray-300">);</span>`,
    'PYTHON': `<span class="text-yellow-400">import</span> <span class="text-blue-400">requests</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">requests</span><span class="text-gray-300">.</span><span class="text-blue-400">get</span><span class="text-gray-300">(</span>
    <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/llm_search'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">},</span>
    <span class="text-orange-400">params</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'query'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Find high-value Ethereum addresses'</span>
    <span class="text-gray-300">}</span>
<span class="text-gray-300">)</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">()</span>
<span class="text-blue-400">print</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'results'</span><span class="text-gray-300">])</span>`,
    'RUBY': `<span class="text-yellow-400">require</span> <span class="text-green-400">'net/http'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'json'</span>

<span class="text-white">uri</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">(</span><span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/llm_search'</span><span class="text-gray-300">)</span>
<span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">query</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">.</span><span class="text-blue-400">encode_www_form</span><span class="text-gray-300">({</span>
  <span class="text-orange-400">query:</span> <span class="text-green-400">'Find high-value Ethereum addresses'</span>
<span class="text-gray-300">})</span>

<span class="text-white">request</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP::Get</span><span class="text-gray-300">.</span><span class="text-blue-400">new</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">)</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'accept'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'application/json'</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'authorization'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP</span><span class="text-gray-300">.</span><span class="text-blue-400">start</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">hostname</span><span class="text-gray-300">,</span> <span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">port</span><span class="text-gray-300">,</span> <span class="text-orange-400">use_ssl:</span> <span class="text-blue-400">true</span><span class="text-gray-300">)</span> <span class="text-yellow-400">do</span> <span class="text-gray-300">|</span><span class="text-white">http</span><span class="text-gray-300">|</span>
  <span class="text-white">http</span><span class="text-gray-300">.</span><span class="text-blue-400">request</span><span class="text-gray-300">(</span><span class="text-white">request</span><span class="text-gray-300">)</span>
<span class="text-yellow-400">end</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span><span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-white">body</span><span class="text-gray-300">)</span>
<span class="text-blue-400">puts</span> <span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'results'</span><span class="text-gray-300">]</span>`
  },
  'json-search-endpoint': {
    'CURL': `<span class="text-blue-400">curl</span> <span class="text-purple-400">-X</span> <span class="text-yellow-400">GET</span> <span class="text-green-400">"https://api.chainfetch.app/api/v1/ethereum/addresses/json_search"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"accept: application/json"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-H</span> <span class="text-green-400">"authorization: Bearer YOUR_API_TOKEN"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"eth_balance_min=1000"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"is_contract=false"</span> <span class="text-gray-400">\\</span>
  <span class="text-purple-400">-d</span> <span class="text-green-400">"limit=10"</span>`,
    'JAVASCRIPT': `<span class="text-blue-400">const</span> <span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-blue-400">fetch</span><span class="text-gray-300">(</span>
  <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/json_search?'</span> <span class="text-purple-400">+</span> 
  <span class="text-yellow-400">new</span> <span class="text-blue-400">URLSearchParams</span><span class="text-gray-300">({</span>
    <span class="text-orange-400">eth_balance_min</span><span class="text-gray-300">:</span> <span class="text-green-400">'1000'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">is_contract</span><span class="text-gray-300">:</span> <span class="text-green-400">'false'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">limit</span><span class="text-gray-300">:</span> <span class="text-green-400">'10'</span>
  <span class="text-gray-300">}), {</span>
    <span class="text-orange-400">method</span><span class="text-gray-300">:</span> <span class="text-green-400">'GET'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-gray-300">: {</span>
      <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
      <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">}</span>
  <span class="text-gray-300">}</span>
<span class="text-gray-300">);</span>

<span class="text-blue-400">const</span> <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">await</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">();</span>
<span class="text-white">console</span><span class="text-gray-300">.</span><span class="text-blue-400">log</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">.</span><span class="text-white">results</span><span class="text-gray-300">);</span>`,
    'PYTHON': `<span class="text-yellow-400">import</span> <span class="text-blue-400">requests</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">requests</span><span class="text-gray-300">.</span><span class="text-blue-400">get</span><span class="text-gray-300">(</span>
    <span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/json_search'</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">headers</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'accept'</span><span class="text-gray-300">:</span> <span class="text-green-400">'application/json'</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'authorization'</span><span class="text-gray-300">:</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>
    <span class="text-gray-300">},</span>
    <span class="text-orange-400">params</span><span class="text-purple-400">=</span><span class="text-gray-300">{</span>
        <span class="text-green-400">'eth_balance_min'</span><span class="text-gray-300">:</span> <span class="text-green-400">'1000'</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'is_contract'</span><span class="text-gray-300">:</span> <span class="text-blue-400">False</span><span class="text-gray-300">,</span>
        <span class="text-green-400">'limit'</span><span class="text-gray-300">:</span> <span class="text-blue-400">10</span>
    <span class="text-gray-300">}</span>
<span class="text-gray-300">)</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-blue-400">json</span><span class="text-gray-300">()</span>
<span class="text-blue-400">print</span><span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'results'</span><span class="text-gray-300">])</span>`,
    'RUBY': `<span class="text-yellow-400">require</span> <span class="text-green-400">'net/http'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'json'</span>

<span class="text-white">uri</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">(</span><span class="text-green-400">'https://api.chainfetch.app/api/v1/ethereum/addresses/json_search'</span><span class="text-gray-300">)</span>
<span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">query</span> <span class="text-purple-400">=</span> <span class="text-blue-400">URI</span><span class="text-gray-300">.</span><span class="text-blue-400">encode_www_form</span><span class="text-gray-300">({</span>
  <span class="text-orange-400">eth_balance_min:</span> <span class="text-green-400">'1000'</span><span class="text-gray-300">,</span>
  <span class="text-orange-400">is_contract:</span> <span class="text-blue-400">false</span><span class="text-gray-300">,</span>
  <span class="text-orange-400">limit:</span> <span class="text-blue-400">10</span>
<span class="text-gray-300">})</span>

<span class="text-white">request</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP::Get</span><span class="text-gray-300">.</span><span class="text-blue-400">new</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">)</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'accept'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'application/json'</span>
<span class="text-white">request</span><span class="text-gray-300">[</span><span class="text-green-400">'authorization'</span><span class="text-gray-300">]</span> <span class="text-purple-400">=</span> <span class="text-green-400">'Bearer YOUR_API_TOKEN'</span>

<span class="text-white">response</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Net::HTTP</span><span class="text-gray-300">.</span><span class="text-blue-400">start</span><span class="text-gray-300">(</span><span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">hostname</span><span class="text-gray-300">,</span> <span class="text-white">uri</span><span class="text-gray-300">.</span><span class="text-white">port</span><span class="text-gray-300">,</span> <span class="text-orange-400">use_ssl:</span> <span class="text-blue-400">true</span><span class="text-gray-300">)</span> <span class="text-yellow-400">do</span> <span class="text-gray-300">|</span><span class="text-white">http</span><span class="text-gray-300">|</span>
  <span class="text-white">http</span><span class="text-gray-300">.</span><span class="text-blue-400">request</span><span class="text-gray-300">(</span><span class="text-white">request</span><span class="text-gray-300">)</span>
<span class="text-yellow-400">end</span>

<span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span><span class="text-white">response</span><span class="text-gray-300">.</span><span class="text-white">body</span><span class="text-gray-300">)</span>
<span class="text-blue-400">puts</span> <span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'results'</span><span class="text-gray-300">]</span>`
  },
  'websocket-endpoint': {
    'JAVASCRIPT': `<span class="text-blue-400">const</span> <span class="text-white">token</span> <span class="text-purple-400">=</span> <span class="text-green-400">"YOUR_API_TOKEN"</span><span class="text-gray-300">;</span>
<span class="text-blue-400">const</span> <span class="text-white">ws</span> <span class="text-purple-400">=</span> <span class="text-yellow-400">new</span> <span class="text-blue-400">WebSocket</span><span class="text-gray-300">(</span><span class="text-green-400">\`wss://api.chainfetch.app/cable?token=\${token}\`</span><span class="text-gray-300">);</span>

<span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-orange-400">onopen</span> <span class="text-purple-400">=</span> <span class="text-gray-300">() => {</span>
  <span class="text-white">console</span><span class="text-gray-300">.</span><span class="text-blue-400">log</span><span class="text-gray-300">(</span><span class="text-green-400">"✅ Connected to ActionCable"</span><span class="text-gray-300">);</span>

  <span class="text-blue-400">const</span> <span class="text-white">subscribeMsg</span> <span class="text-purple-400">=</span> <span class="text-gray-300">{</span>
    <span class="text-orange-400">command</span><span class="text-gray-300">:</span> <span class="text-green-400">"subscribe"</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">identifier</span><span class="text-gray-300">:</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">stringify</span><span class="text-gray-300">({ </span><span class="text-orange-400">channel</span><span class="text-gray-300">: </span><span class="text-green-400">"EthereumBlocksChannel"</span> <span class="text-gray-300">})</span>
  <span class="text-gray-300">};</span>
  <span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-blue-400">send</span><span class="text-gray-300">(</span><span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">stringify</span><span class="text-gray-300">(</span><span class="text-white">subscribeMsg</span><span class="text-gray-300">));</span>
<span class="text-gray-300">};</span>

<span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-orange-400">onmessage</span> <span class="text-purple-400">=</span> <span class="text-gray-300">(</span><span class="text-white">event</span><span class="text-gray-300">) => {</span>
  <span class="text-blue-400">const</span> <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span><span class="text-white">event</span><span class="text-gray-300">.</span><span class="text-white">data</span><span class="text-gray-300">);</span>
  
  <span class="text-yellow-400">if</span> <span class="text-gray-300">(</span><span class="text-white">data</span><span class="text-gray-300">.</span><span class="text-white">message</span><span class="text-gray-300">) {</span>
    <span class="text-white">console</span><span class="text-gray-300">.</span><span class="text-blue-400">log</span><span class="text-gray-300">(</span><span class="text-green-400">"📩 New Ethereum block:"</span><span class="text-gray-300">, </span><span class="text-white">data</span><span class="text-gray-300">.</span><span class="text-white">message</span><span class="text-gray-300">);</span>
  <span class="text-gray-300">}</span>
<span class="text-gray-300">};</span>`,
    'PYTHON': `<span class="text-yellow-400">import</span> <span class="text-blue-400">websocket</span>
<span class="text-yellow-400">import</span> <span class="text-blue-400">json</span>

<span class="text-blue-400">def</span> <span class="text-white">on_open</span><span class="text-gray-300">(</span><span class="text-white">ws</span><span class="text-gray-300">):</span>
    <span class="text-blue-400">print</span><span class="text-gray-300">(</span><span class="text-green-400">"✅ Connected to ActionCable"</span><span class="text-gray-300">)</span>
    
    <span class="text-white">subscribe_msg</span> <span class="text-purple-400">=</span> <span class="text-gray-300">{</span>
        <span class="text-green-400">"command"</span><span class="text-gray-300">: </span><span class="text-green-400">"subscribe"</span><span class="text-gray-300">,</span>
        <span class="text-green-400">"identifier"</span><span class="text-gray-300">: </span><span class="text-blue-400">json</span><span class="text-gray-300">.</span><span class="text-blue-400">dumps</span><span class="text-gray-300">({</span><span class="text-green-400">"channel"</span><span class="text-gray-300">: </span><span class="text-green-400">"EthereumBlocksChannel"</span><span class="text-gray-300">})</span>
    <span class="text-gray-300">}</span>
    <span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-blue-400">send</span><span class="text-gray-300">(</span><span class="text-blue-400">json</span><span class="text-gray-300">.</span><span class="text-blue-400">dumps</span><span class="text-gray-300">(</span><span class="text-white">subscribe_msg</span><span class="text-gray-300">))</span>

<span class="text-blue-400">def</span> <span class="text-white">on_message</span><span class="text-gray-300">(</span><span class="text-white">ws</span><span class="text-gray-300">, </span><span class="text-white">message</span><span class="text-gray-300">):</span>
    <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">json</span><span class="text-gray-300">.</span><span class="text-blue-400">loads</span><span class="text-gray-300">(</span><span class="text-white">message</span><span class="text-gray-300">)</span>
    
    <span class="text-yellow-400">if</span> <span class="text-green-400">'message'</span> <span class="text-yellow-400">in</span> <span class="text-white">data</span><span class="text-gray-300">:</span>
        <span class="text-blue-400">print</span><span class="text-gray-300">(</span><span class="text-green-400">"📩 New Ethereum block:"</span><span class="text-gray-300">, </span><span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'message'</span><span class="text-gray-300">])</span>

<span class="text-white">ws</span> <span class="text-purple-400">=</span> <span class="text-blue-400">websocket</span><span class="text-gray-300">.</span><span class="text-blue-400">WebSocketApp</span><span class="text-gray-300">(</span>
    <span class="text-green-400">"wss://api.chainfetch.app/cable?token=YOUR_API_TOKEN"</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">on_open</span><span class="text-purple-400">=</span><span class="text-white">on_open</span><span class="text-gray-300">,</span>
    <span class="text-orange-400">on_message</span><span class="text-purple-400">=</span><span class="text-white">on_message</span>
<span class="text-gray-300">)</span>

<span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-blue-400">run_forever</span><span class="text-gray-300">()</span>`,
    'RUBY': `<span class="text-yellow-400">require</span> <span class="text-green-400">'async'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'async/http/endpoint'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'async/websocket/client'</span>
<span class="text-yellow-400">require</span> <span class="text-green-400">'json'</span>

<span class="text-white">@running</span> <span class="text-purple-400">=</span> <span class="text-blue-400">true</span>

<span class="text-white">@task</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Async</span> <span class="text-yellow-400">do</span> <span class="text-gray-300">|</span><span class="text-white">task</span><span class="text-gray-300">|</span>
  <span class="text-yellow-400">begin</span>
    <span class="text-white">endpoint</span> <span class="text-purple-400">=</span> <span class="text-blue-400">Async::HTTP::Endpoint</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span>
      <span class="text-green-400">"wss://api.chainfetch.app/cable?token=YOUR_API_TOKEN"</span><span class="text-gray-300">,</span>
      <span class="text-orange-400">alpn_protocols:</span> <span class="text-gray-300">[</span> <span class="text-green-400">"http/1.1"</span> <span class="text-gray-300">]</span>
    <span class="text-gray-300">)</span>

    <span class="text-blue-400">Async::WebSocket::Client</span><span class="text-gray-300">.</span><span class="text-blue-400">connect</span><span class="text-gray-300">(</span><span class="text-white">endpoint</span><span class="text-gray-300">)</span> <span class="text-yellow-400">do</span> <span class="text-gray-300">|</span><span class="text-white">ws</span><span class="text-gray-300">|</span>
      <span class="text-blue-400">puts</span> <span class="text-green-400">"✅ Connected to ActionCable"</span>
      
      <span class="text-white">subscribe_msg</span> <span class="text-purple-400">=</span> <span class="text-gray-300">{</span>
        <span class="text-orange-400">command:</span> <span class="text-green-400">"subscribe"</span><span class="text-gray-300">,</span>
        <span class="text-orange-400">identifier:</span> <span class="text-gray-300">{</span> <span class="text-orange-400">channel:</span> <span class="text-green-400">"EthereumBlocksChannel"</span> <span class="text-gray-300">}.</span><span class="text-blue-400">to_json</span>
      <span class="text-gray-300">}</span>
      <span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-blue-400">write</span><span class="text-gray-300">(</span><span class="text-white">subscribe_msg</span><span class="text-gray-300">.</span><span class="text-blue-400">to_json</span><span class="text-gray-300">)</span>

      <span class="text-yellow-400">while</span> <span class="text-white">@running</span> <span class="text-purple-400">&&</span> <span class="text-gray-300">(</span><span class="text-white">message</span> <span class="text-purple-400">=</span> <span class="text-white">ws</span><span class="text-gray-300">.</span><span class="text-blue-400">read</span><span class="text-gray-300">)</span>
        <span class="text-white">data</span> <span class="text-purple-400">=</span> <span class="text-blue-400">JSON</span><span class="text-gray-300">.</span><span class="text-blue-400">parse</span><span class="text-gray-300">(</span><span class="text-white">message</span><span class="text-gray-300">.</span><span class="text-blue-400">to_s</span><span class="text-gray-300">)</span>
        
        <span class="text-yellow-400">if</span> <span class="text-white">data</span><span class="text-gray-300">[</span><span class="text-green-400">'message'</span><span class="text-gray-300">]</span>
          <span class="text-blue-400">puts</span> <span class="text-green-400">"📩 New Ethereum block: </span><span class="text-orange-400">#{data['message']['block_number']}</span><span class="text-green-400">"</span>
        <span class="text-yellow-400">end</span>
      <span class="text-yellow-400">end</span>
    <span class="text-yellow-400">end</span>
  <span class="text-yellow-400">rescue</span> <span class="text-purple-400">=></span> <span class="text-white">e</span>
    <span class="text-blue-400">puts</span> <span class="text-green-400">"❌ WebSocket error: </span><span class="text-orange-400">#{e.message}</span><span class="text-green-400">"</span>
    <span class="text-blue-400">puts</span> <span class="text-green-400">"🔄 Retrying in 5 seconds..."</span>
    <span class="text-white">task</span><span class="text-gray-300">.</span><span class="text-blue-400">sleep</span><span class="text-gray-300">(</span><span class="text-blue-400">5</span><span class="text-gray-300">)</span>
    <span class="text-yellow-400">retry</span> <span class="text-yellow-400">if</span> <span class="text-white">@running</span>
  <span class="text-yellow-400">end</span>
<span class="text-yellow-400">end</span>`
  }
};

// Initialize code examples
document.addEventListener('turbo:load', function() {
  const endpointBlocks = document.querySelectorAll('.endpoint-block');
  
  endpointBlocks.forEach(block => {
    const endpointId = block.getAttribute('data-endpoint');
    const tabs = block.querySelectorAll('.code-tab');
    const codeContent = block.querySelector('.code-content');
    
    if (tabs.length > 0 && codeContent && window.codeExamples[endpointId]) {
      // Set first tab as active
      tabs[0].classList.add('active', 'bg-yellow-500/20', 'text-yellow-400');
      codeContent.innerHTML = window.codeExamples[endpointId][tabs[0].textContent];
      
      tabs.forEach(tab => {
        tab.addEventListener('click', () => {
          // Remove active class from all tabs
          tabs.forEach(t => t.classList.remove('active', 'bg-yellow-500/20', 'text-yellow-400'));
          
          // Add active class to clicked tab
          tab.classList.add('active', 'bg-yellow-500/20', 'text-yellow-400');
          
          // Update code content
          const language = tab.textContent;
          if (window.codeExamples[endpointId][language]) {
            codeContent.innerHTML = window.codeExamples[endpointId][language];
          }
        });
      });
    }
  });
});

// Copy to clipboard functionality
function copyToClipboard(button, text) {
  navigator.clipboard.writeText(text).then(() => {
    const originalHTML = button.innerHTML;
    button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"></path></svg>';
    setTimeout(() => {
      button.innerHTML = originalHTML;
    }, 2000);
  });
}
</script>

<style>
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.animate-fadeIn {
  animation: fadeIn 0.8s ease-out;
}

.code-tab {
  @apply text-gray-500 hover:text-gray-300 hover:bg-gray-700/50 transition-colors;
}

.code-tab.active {
  @apply bg-yellow-500/20 text-yellow-400 border-yellow-500/30;
}
</style>

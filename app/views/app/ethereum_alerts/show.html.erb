<turbo-frame id="alert_details">
  <div class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4" id="alert-details-modal">
    <div class="bg-slate-800 border border-slate-700 rounded-lg w-full max-w-md mx-auto" onclick="event.stopPropagation()">
      <div class="p-6">
        <!-- Modal Header -->
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-xl font-bold text-white">Alert Details</h2>
          <%= link_to app_ethereum_alerts_path, 
              class: "text-gray-400 hover:text-white transition-colors",
              data: { turbo_frame: "_top" } do %>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M18 6L6 18M6 6l12 12"/>
            </svg>
          <% end %>
        </div>

        <!-- Alert Information -->
        <div class="space-y-4">
          <!-- Status -->
          <div class="flex items-center justify-between">
            <h3 class="text-sm font-medium text-white">Status</h3>
            <span class="px-3 py-1 rounded-full text-xs font-medium <%= @ethereum_alert.active? ? 'bg-green-900/30 text-green-400 border border-green-700' : 'bg-gray-900/30 text-gray-400 border border-gray-700' %>">
              <%= @ethereum_alert.status.humanize %>
            </span>
          </div>

          <!-- Address Hash -->
          <div>
            <h3 class="text-sm font-medium text-white mb-2">Ethereum Address</h3>
            <div class="bg-slate-900/50 border border-slate-600 rounded p-3">
              <p class="text-gray-300 font-mono text-sm break-all mb-2">
                <%= @ethereum_alert.address_hash %>
              </p>
              <button class="text-xs text-yellow-400 hover:text-yellow-300 transition-colors" onclick="copyToClipboard('<%= @ethereum_alert.address_hash %>', this)">
                <span class="copy-icon">ðŸ“‹</span>
                <span class="copy-text">Copy Address</span>
              </button>
            </div>
          </div>

          <!-- Webhook URL -->
          <div>
            <h3 class="text-sm font-medium text-white mb-2">Webhook URL</h3>
            <div class="bg-slate-900/50 border border-slate-600 rounded p-3">
              <p class="text-gray-300 text-sm break-all mb-2">
                <%= @ethereum_alert.webhook_url %>
              </p>
              <button class="text-xs text-yellow-400 hover:text-yellow-300 transition-colors" onclick="copyToClipboard('<%= @ethereum_alert.webhook_url %>', this)">
                <span class="copy-icon">ðŸ“‹</span>
                <span class="copy-text">Copy URL</span>
              </button>
            </div>
          </div>

          <!-- Timestamps -->
          <div class="space-y-3">
            <div>
              <h4 class="text-xs font-medium text-gray-400 uppercase tracking-wide mb-1">Created</h4>
              <p class="text-sm text-gray-300">
                <%= @ethereum_alert.created_at.strftime("%B %d, %Y at %I:%M %p") %>
              </p>
            </div>
            
            <div>
              <h4 class="text-xs font-medium text-gray-400 uppercase tracking-wide mb-1">Last Triggered</h4>
              <p class="text-sm text-gray-300">
                <% if @ethereum_alert.last_triggered_at %>
                  <%= @ethereum_alert.last_triggered_at.strftime("%B %d, %Y at %I:%M %p") %>
                <% else %>
                  <span class="text-gray-500 italic">Never triggered</span>
                <% end %>
              </p>
            </div>

            <div>
              <h4 class="text-xs font-medium text-gray-400 uppercase tracking-wide mb-1">Last Updated</h4>
              <p class="text-sm text-gray-300">
                <%= @ethereum_alert.updated_at.strftime("%B %d, %Y at %I:%M %p") %>
              </p>
            </div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex space-x-2 mt-6 pt-4 border-t border-slate-600">
          <%= link_to app_ethereum_alerts_path, 
              class: "flex-1 px-3 py-2 bg-slate-700 hover:bg-slate-600 text-white text-center rounded font-medium transition-colors text-sm",
              data: { turbo_frame: "_top" } do %>
            Back
          <% end %>
          
          <%= link_to edit_app_ethereum_alert_path(@ethereum_alert), 
              class: "px-3 py-2 bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 text-white rounded font-medium transition-all duration-200 text-sm",
              data: { turbo_frame: "alert_form" } do %>
            Edit
          <% end %>
          
          <%= button_to app_ethereum_alert_path(@ethereum_alert), 
              method: :delete,
              class: "px-3 py-2 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white rounded font-medium transition-all duration-200 text-sm",
              data: { 
                turbo_confirm: "Are you sure you want to delete this alert?",
                turbo_frame: "_top"
              } do %>
            Delete
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- Close modal when clicking outside -->
  <script>
    document.getElementById('alert-details-modal').addEventListener('click', function(e) {
      if (e.target === this) {
        window.location.href = '<%= app_ethereum_alerts_path %>';
      }
    });
    
    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        window.location.href = '<%= app_ethereum_alerts_path %>';
      }
    });
    
    // Copy to clipboard function
    function copyToClipboard(text, button) {
      navigator.clipboard.writeText(text).then(function() {
        // Get the icon and text elements
        const copyIcon = button.querySelector('.copy-icon');
        const copyText = button.querySelector('.copy-text');
        
        // Store original content
        const originalIcon = copyIcon.innerHTML;
        const originalText = copyText.innerHTML;
        
        // Show green checkmark
        copyIcon.innerHTML = 'âœ…';
        copyText.innerHTML = 'Copied!';
        button.classList.remove('text-yellow-400', 'hover:text-yellow-300');
        button.classList.add('text-green-400');
        
        // Reset after 2 seconds
        setTimeout(function() {
          copyIcon.innerHTML = originalIcon;
          copyText.innerHTML = originalText;
          button.classList.remove('text-green-400');
          button.classList.add('text-yellow-400', 'hover:text-yellow-300');
        }, 2000);
      }).catch(function(err) {
        console.error('Failed to copy: ', err);
      });
    }
  </script>
</turbo-frame>